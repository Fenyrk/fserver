#!/bin/bash

trap '' 2 # You can't use Ctrl+C to terminate the process

# Servers
declare -a DNS_SERVER=("bind9" "DNS Server")
declare -a WEB_SERVER=("apache2" "WEB Server")
declare -a DHCP_SERVER=("isc-dhcp-server" "DHCP Server")
declare -a FTP_SERVER=("vsftpd" "FTP Server")
declare -a SSH_SERVER=("openssh-server" "SSH Server")

# Console text color
declare -A COLOR
COLOR[BLACK]="\e[1;30"
COLOR[RED]="\e[0m\e[1;31m" 
COLOR[GREEN]="\e[0m\e[1;32m" 
COLOR[YELLOW]="\e[0m\e[1;33m"
COLOR[BLUE]="\e[0m\e[1;34m"
COLOR[PURPLE]="\e[0m\e[1;35m"
COLOR[CYAN]="\e[0m\e[1;36m"
COLOR[WHITE]="\e[0m\e[1;37m"
COLOR[END]="\e[0m"

# Header about
function header() {
    clear
    echo -e ${COLOR[CYAN]};
    echo "    _____ __             __                                        ";
    echo "   / ___// /_____ ______/ /_   ________  ______   _____  __________";
    echo "   \__ \/ __/ __ \`/ ___/ __/  / ___/ _ \/ ___/ | / / _ \/ ___/ ___/";
    echo "  ___/ / /_/ /_/ / /  / /_   (__  )  __/ /   | |/ /  __/ /  (__  ) ";
    echo " /____/\__/\__,_/_/   \__/  /____/\___/_/    |___/\___/_/  /____/  ";
    echo "                                                                   ";
    echo "                 +-+-+-+-+-+-+-+ +-+-+ +-+-+-+-+-+                 ";
    echo "                 |D|e|v|e|l|o|p| |b|y| |F|e|n|y|r|                 ";
    echo "                 +-+-+-+-+-+-+-+ +-+-+ +-+-+-+-+-+                 ";
    echo
    #echo -e ${COLOR[RED]}"File name: $0"
    echo
}

function press_any_key() {
    echo -en ${COLOR[GREEN]}"\nPress any key to continue... "
    read -n 1 key
}

function check_connection() {

    echo -e ${COLOR[BLUE]}"Checking internet connection... "
    ping -c 4 www.google.com &> /dev/null;
    if [ $? -eq 0 ]; then
        echo -e ${COLOR[GREEN]}"Internet connection ..... [OK]"
        return 0
    else
        echo -e ${COLOR[RED]}"There is no Internet connection ..... [FAILED]"
        return 1
    fi

}

function is_installed() {

    echo -e ${COLOR[BLUE]}"Checking if $1 is installed... "
    dpkg --get-selections $1 2> /dev/null | grep -o $1 > /dev/null

    if [ $? -eq 0 ]; then
        echo -e ${COLOR[GREEN]}"$1 is installed ..... [OK]"
        return 0
    else
        echo -e ${COLOR[RED]}"$1 is not installed ..... [FAILED]"
        return 1
    fi
    
}

function update_system() {

    echo -e ${COLOR[BLUE]}"Updating system..."
    sudo apt-get update > /dev/null;
    sudo apt-get upgrade -y > /dev/null;
    echo -e ${COLOR[GREEN]}"System updated ..... [OK]"

}

function install_package() {

    echo -e ${COLOR[BLUE]}"Installing $1..."
    sudo apt-get install $1 -y > /dev/null;
    if [ $? -eq 0 ]; then 
        echo -e ${COLOR[GREEN]}"$1 installed ..... [OK]"
        return 0
    else
        echo -e ${COLOR[RED]}"$1 not installed ..... [FAILED]"
        return 1
    fi

}

function uninstall_package() {

    echo -e ${COLOR[BLUE]}"Uninstalling $1..."
    sudo apt-get remove --purge $1 -y > /dev/null;
    if [ $? -eq 0 ]; then 
        echo -e ${COLOR[GREEN]}"$1 uninstalled ..... [OK]"
        return 0
    else
        echo -e ${COLOR[RED]}"$1 not installed ..... [FAILED]"
        return 1
    fi

}

function dns_conf() {
    echo "Hello"
}

function server_conf() {

    declare -a SERVER=("${!1}")
    local server_package=${SERVER[0]}
    local server_name=${SERVER[1]}

    while [[ "$REPLY" != 0 ]]; do
        clear
        header
        echo -e ${COLOR[WHITE]}"-- $server_name options --";
        echo 
        echo "  1. Check if it is installed";
        echo "  2. Install";
        echo "  3. Uninstall";
        echo "  4. Setup";
        echo "  5. Return";
        echo "  0. Exit";
        echo
        read -p "What do you want to do? " -n 1
        echo -e 

        case $REPLY in
            0)
                echo -e ${COLOR[GREEN]}"Done"
            ;;
            1) 
                is_installed $server_package
                press_any_key
            ;;
            2)
                is_installed $server_package
                if [ $? -eq 1 ]; then
                    check_connection
                    if [ $? -eq 0 ]; then
                        update_system
                        install_package $server_package
                    fi
                fi
                press_any_key
            ;;
            3)
                is_installed $server_package
                if [ $? -eq 0 ]; then
                    uninstall_package $server_package
                fi
                press_any_key
            ;;
            4)
                case $server_package in
                    bind9) 
                        echo "Setup $server_name"
                        dns_conf
                    ;;
                esac
                
                press_any_key
            ;;
            5)
                break
            ;;
            *) 
                echo -e ${COLOR[RED]}"Invalid option"
                press_any_key
            ;;
        esac
    done
    
}

while [[ "$REPLY" != 0 ]]; do
    header
    echo -e ${COLOR[YELLOW]}"-- Main menu --"
    echo
    echo "This script will help you install and configure the following servers quickly:";
    echo
    echo "  1. ${DNS_SERVER[1]}";
    echo "  2. ${WEB_SERVER[1]}";
    echo "  3. ${DHCP_SERVER[1]}";
    echo "  4. ${FTP_SERVER[1]}";
    echo "  5. ${SSH_SERVER[1]}";
    echo "  0. Exit";
    echo
    read -p "Choose an option > " -n 1
    echo -e 

    case $REPLY in
        0)
            clear
            echo -e ${COLOR[GREEN]}"Program terminated .... [OK]"
        ;;
        1)
            server_conf DNS_SERVER[@]
        ;;
        2)
            server_conf WEB_SERVER[@]
        ;;
        3)
            server_conf DHCP_SERVER[@]
        ;;
        4)
            server_conf FTP_SERVER[@]
        ;;
        5)
            server_conf SSH_SERVER[@]
        ;;
        *)
            echo -e ${COLOR[RED]}"Invalid option"
            press_any_key
        ;;
    esac

done